# Generated by Django 5.2.6 on 2025-10-22 08:05

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('library_app', '0004_remove_book_available_copies_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='book',
            name='available_copies',
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AddField(
            model_name='historicalbook',
            name='available_copies',
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AddField(
            model_name='notification',
            name='book',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='library_app.book'),
        ),
        migrations.AddField(
            model_name='notification',
            name='borrow',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='library_app.borrow'),
        ),
        migrations.AddField(
            model_name='notification',
            name='group_id',
            field=models.CharField(blank=True, help_text='Group ID for batched notifications', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='notification',
            name='notification_type',
            field=models.CharField(choices=[('borrow_request', 'Borrow Request'), ('borrow_approved', 'Borrow Approved'), ('borrow_rejected', 'Borrow Rejected'), ('book_issued', 'Book Issued'), ('book_returned', 'Book Returned'), ('book_available', 'Book Available'), ('reservation_fulfilled', 'Reservation Fulfilled'), ('teacher_bulk_request', 'Teacher Bulk Request'), ('overdue_reminder', 'Overdue Reminder')], default='borrow_request', max_length=50),
        ),
        migrations.AddField(
            model_name='notification',
            name='reservation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='library_app.reservation'),
        ),
    ]
